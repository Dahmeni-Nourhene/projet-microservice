server.port=8080
spring.application.name=clientservice

spring.data.mongodb.uri=mongodb://localhost:27017/ms_clients
spring.data.mongodb.database=ms_clients

# Feign + Circuit Breaker
# feign.circuitbreaker.enabled=true
spring.cloud.circuitbreaker.resilience4j.enabled=true

# Logs utiles
logging.level.org.springframework.cloud.openfeign=DEBUG
logging.level.io.github.resilience4j=DEBUG
logging.level.feign=DEBUG

# Résilience pour ms-commande
resilience4j.circuitbreaker.instances.ms-commande.register-health-indicator=true
resilience4j.circuitbreaker.instances.ms-commande.sliding-window-size=5
resilience4j.circuitbreaker.instances.ms-commande.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.ms-commande.wait-duration-in-open-state=10s
resilience4j.circuitbreaker.instances.ms-commande.permitted-number-of-calls-in-half-open-state=3

# Pour éviter les erreurs de doublons
spring.main.allow-bean-definition-overriding=true


# URL du service Commande (avec valeur par défaut)
commande.service.url=http://localhost:8082

spring.kafka.bootstrap-servers=localhost:9093

spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

spring.kafka.consumer.group-id=ms-client-group
spring.kafka.consumer.properties.spring.json.trusted.packages=*


#############################
###    Eureka Config      ###
#############################
# Service Registration
eureka.instance.appname=clientservice
eureka.instance.instance-id=${spring.application.name}:${random.value}
eureka.client.service-url.defaultZone=http://localhost:8095/eureka

# Instance Settings
eureka.instance.prefer-ip-address=true
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.client.instance-info-replication-interval-seconds=10

